1. cube

#include <stdio.h>

int main()
{
    int num;
    printf("Input a number: ");
    if (!scanf("%d", &num))
    {
        printf("Please input a number.");
        return 1;
    }

    printf("Cube of %d is %d", num, num*num*num);
}

---------------------------------------------------

2. alphabet.c

#include <stdio.h>

int main()
{
    char input;

    printf("Input a character: ");
    scanf("%c", &input);

    if ((input >= 65 && input <= 90) ||
        (input >= 97 && input <= 122))
    {
        printf("Character %c is in the alphabet.\n", input);
    }
    else
    {
        printf("Not alphabet.\n");

    }
}

------------------------------------------------------------------

3. positive-negative.c

#include <stdio.h>

int main()
{
    int n;
    printf("Input a number: ");
    if (!scanf("%d", &n))
    {
        printf("Please input a number.\n");
    }

    if (n > 0)
    {
        printf("Number is positive.\n");
    }
    else if (n < 0)
    {
        printf("Number is negative.\n");
    }
    else
    {
        printf("Number is zero.\n");
    }
}

--------------------------------------------------------------

4. calculator

#include <stdio.h>
#include <math.h>

int main()
{
    int x,y;
    printf("Input two numbers: ");
    if (2 != scanf("%d %d", &x, &y))
    {
        printf("Please input a two numbers.\n");
        return 1;
    }

    char mode;
    printf("Input operator: ");
    scanf(" %c", &mode);
    if (mode != '+' && mode != '-'
     && mode != '*' && mode != '/')
    {
        printf("Please choose operator from: + - * /\n");
        return 1;
    }
    if (0 == y && '/' == mode)
    {
        printf("Cannot divide by zero.\n");
        return 1;
    }

    switch (mode)
    {
        case '+':
            printf("%d\n", x+y);
            break;
        case '-':
            printf("%d\n", x-y);
            break;
        case '*':
            printf("%d\n", x*y);
            break;
        case '/':
            printf("%d\n", x/y);
            break;
    }
}

---------------------------------------------------------------------

5. evenodd.c

#include <stdio.h>

int main()
{
    int num;
    printf("Input a number: ");
    if (!scanf("%d", &num))
    {
        printf("Please input a number.\n");
        return 1;
    }

    if (num % 2 == 0)
    {
        printf("Number is even.\n");
    }
    else
    {
        printf("Number is odd.\n");
    }
}

-----------------------------------------------------

6. uppercase.c

#include <stdio.h>

int main()
{
    int num;
    printf("Input a number: ");
    if (!scanf("%d", &num))
    {
        printf("Please input a number.\n");
        return 1;
    }

    if (num % 2 == 0)
    {
        printf("Number is even.\n");
    }
    else
    {
        printf("Number is odd.\n");
    }
}
 -----------------------------------------------------

7. multiple.c

#include <stdio.h>

int main()
{
    int x,y;
    printf("Input first number: ");
    if (!scanf("%d", &x))
    {
        printf("Please input a number.\n");
        return 1;
    }

    printf("Input second number: ");
    if (!scanf("%d", &y))
    {
        printf("Please input a number.\n");
        return 1;
    }

    if (x % y == 0)
    {
        printf("%d is a multiple of %d.\n", x, y);
    }
    else
    {
        printf("%d is not a multiple of %d.\n", x, y);
    }
}

----------------------------------------------------------------

8. prime.c

#include <stdio.h

int isPrime(int n);

int main()
{
    int x,y;
    printf("Input first integer: ");
    if (1 != scanf("%d", &x) || x < 1)
    {
        printf("Please input a positive integer.\n");
        return 1;
    }

    printf("Input second integer: ");
    if (1 != scanf("%d", &y) || y < 1 || x > y)
    {
        printf("Please input a positive integer bigger than first one.\n");
        return 1;
    }

    for (int i = x; i < y; i++)
    {
        if (isPrime(i))
        {
            printf("%d", i);
        }
        printf("\n");
    }
}

int isPrime(int n){

    for (int i = 2; i * i <= n; i++)
    {

        if (0 == n % i){

            return 0;
        }
    }
    return 1

----------------------------------------------------

9. swap.c

#include <stdio.h>

int main()
{
    int x,y;
    printf("Input two numbers: ");
    if (2 != scanf("%d %d", &x, &y))
    {
        printf("Please input two numbers.\n");
        return 1;
    }

    int swap;
    swap = x;
    x = y;
    y = swap;

    printf("first: %d, second: %d", x, y);
}

----------------------------------------------------

10. hole.c

#include <stdio.h>

int count_holes(int number);

int main()
{
    int x;
    printf("Input number: ");
    if (1 != scanf("%d", &x) || x < 0)
    {
        printf("Please input a positive integer.\n");
        return 1;
    }

    printf("This number has %d holes.\n", count_holes(x));
}

int count_holes(int number)
{
    if (0 == number)
    {
        return 1;
    }

    int digit = 0, holes = 0;
    while (number > 0)
    {
        digit = number % 10;
        switch (digit)
        {
            case 0:
            case 4:
            case 6:
            case 9:
                holes++;
                break;
            case 8:
                holes += 2;
                break;
        }
        number = number / 10;
    }
    return holes;
}

--------------------------------------------------

11. pow2.c

#include <stdio.h>

int is_power_of_two(int n);

int main()
{
    int x;
    printf("Input number: ");
    if (1 != scanf("%d", &x) || x < 0)
    {
        printf("Please input a positive integer.\n");
        return 1;
    }

    if (is_power_of_two(x))
    {
        printf("%d is a power of 2.\n", x);
    }
    else
    {
        printf("%d is not a power of 2.\n", x);
    }
}

int is_power_of_two(int n)
{
    if (n == 0)
    {
        return 0;
    }

    while (n != 1)
    {
        if (n % 2 != 0)
        {
            return 0;
        }
        n = n / 2;
    }
    return 1;
}

------------------------------------------

12. heater.c

#include <stdio.h>

int calculate_heater_time(int temp);

int main()
{
    int x;
    printf("Input number: ");
    if (1 != scanf("%d", &x) || x < 0)
    {
        printf("Please input a positive integer.\n");
        return 1;
    }

    printf("Required heating time is %d mins.\n", calculate_heater_time(x));
}

int calculate_heater_time(int temp)
{
    if (temp <= 30)
    {
        return 7;
    }
    else if (temp <= 60)
    {
        return 5;
    }
    else if (temp <= 90)
    {
        return 3;
    }
    else if (temp > 90)
    {
        return 1;
    }
    else if (temp > 100)
    {
        return 0;
    }
}

---------------------------------------------------

13. floor.c

#include <stdio.h>

int floor_of_sum(float x, float y);

int main()
{
    float x,y;
    printf("Input two floating numbers: ");
    if (2 != scanf("%f %f", &x, &y))
    {
        printf("Please input two numbers.\n");
        return 1;
    }

    printf("Floor of sum is %d", floor_of_sum(x, y));
}

int floor_of_sum(float x, float y)
{
    float sum = x + y;
    return sum / 1;
}

-----------------------------------------------------------------

14. fibonacci.c

#include <stdio.h>

int previous1 = 1;
int previous2 = 0;
int flag = 0;
void fibonacci(int n);

int main()
{
    fibonacci(3);
}

void fibonacci(int n)
{
    if (!flag)
    {
        switch (n)
        {
            case 0:
                printf("Invalid argument.\n");
                return;
            case 1:
                printf("0");
                return;
            default:
                printf("0 1 ");
                flag = 1;
        }
    }

    if (n > 2)
    {
        int sum = previous1 + previous2;
        printf("%d ", sum);

        previous2 = previous1;
        previous1 = sum;
        fibonacci(n-1);
    }
}

